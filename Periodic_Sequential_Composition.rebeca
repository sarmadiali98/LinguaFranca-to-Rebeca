reactiveclass Node(10000) {
    knownrebecs {
        Node next;
    }

    statevars {
        int recievedMsg; //recieved message
        int sentMsg; //sent message
        int period;
		boolean isfirst;
		boolean islast;
		boolean seqDone; //sequence is done
    }
    	
    Node(boolean isFirst, boolean isLast) {
    	isfirst = isFirst;
    	islast = isLast;
    	period = 1;
    	
    	seqDone = false;
        
        
        sentMsg = 0; //Initial Value
        self.sendMsg(sentMsg); //starting
        
    }
    
    msgsrv sendMsg(int msg) {
        next.rcvMsg(msg);
        self.sendMsg(msg) after(period);
    }

    msgsrv rcvMsg(int msg) {
        recievedMsg = msg;
        
        sentMsg = recievedMsg;
        
        if(islast) {
            self.seqDone = true; //sequence is done.
        }
    }
}

main {
    Node node0(node1):(true, false);
    Node node1(node2):(false, false);
    Node node2(node3):(false, false);
    Node node3(node3):(false, true);
}
