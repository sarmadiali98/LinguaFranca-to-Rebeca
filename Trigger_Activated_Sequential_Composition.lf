target Cpp

public preamble {=
    #include <iostream>
=}

reactor Node(id: int = 0, isfirst: bool = false, islast: bool = false) {

    input recievedMsg: int;
    output sentMsg: int;

    logical action sendMsg(0);


    reaction(startup) -> sentMsg {=
        if(isfirst) {
            sentMsg.set(1);
            std::cout << "Message sent on first node" << std::endl;
        }
    =}

    reaction(recievedMsg) -> sentMsg {=
        if(islast) {
            std::cout << "Sequence done" << std::endl;
        } else {
            sentMsg.set(1);
            std::cout << "Message sent on node: " << id << std::endl;
        }
    =}
}

main reactor {
    node0 = new Node(isfirst = true, islast = false, id = 1);
    node1 = new Node(isfirst = false, islast = false, id = 2);
    node2 = new Node(isfirst = false, islast = false, id = 3);
    node3 = new Node(isfirst = false, islast = true, id = 4);

    node0.sentMsg -> node1.recievedMsg;
    node1.sentMsg -> node2.recievedMsg;
    node2.sentMsg -> node3.recievedMsg;
}
